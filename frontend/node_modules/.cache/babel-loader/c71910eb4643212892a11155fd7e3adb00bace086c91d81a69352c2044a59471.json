{"ast":null,"code":"import React,{useState}from'react';import ReactMarkdown from'react-markdown';import'./App.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function App(){const[diaryEntry,setDiaryEntry]=useState('');const[feedback,setFeedback]=useState('');const[isLoading,setIsLoading]=useState(false);const[sentiment,setSentiment]=useState(null);const[subjectivity,setSubjectivity]=useState(null);const[emotions,setEmotions]=useState([]);const handleSubmit=async()=>{setIsLoading(true);try{const response=await fetch('/api/submit_diary',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({diaryEntry})});const data=await response.json();setFeedback(data.feedback);setSentiment(data.sentiment);setSubjectivity(data.subjectivity);setEmotions(data.emotions);}catch(error){console.error('Error fetching feedback:',error);setFeedback('Failed to get feedback. Please try again.');}finally{setIsLoading(false);}};const today=new Date().toLocaleDateString('en-US',{year:'numeric',month:'long',day:'numeric'});const renderAnalysisGraph=(value,title)=>/*#__PURE__*/_jsxs(\"div\",{className:\"analysis-graph\",children:[/*#__PURE__*/_jsxs(\"h3\",{children:[title,\":\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"graph-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"graph-bar\",style:{width:`${(value+5)/10*100}%`}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"graph-labels\",children:[/*#__PURE__*/_jsx(\"span\",{children:title==='Sentiment Analysis'?'Negative':'Objective'}),/*#__PURE__*/_jsx(\"span\",{children:\"Neutral\"}),/*#__PURE__*/_jsx(\"span\",{children:title==='Sentiment Analysis'?'Positive':'Subjective'})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Score: \",/*#__PURE__*/_jsx(\"strong\",{children:value.toFixed(2)})]})]});return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Good day user, how was your day?\"}),/*#__PURE__*/_jsx(\"p\",{className:\"date\",children:today}),/*#__PURE__*/_jsx(\"textarea\",{value:diaryEntry,onChange:e=>setDiaryEntry(e.target.value),placeholder:\"Write your diary entry here...\",rows:\"10\",cols:\"50\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,disabled:isLoading,children:isLoading?/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}):'Submit Entry'}),sentiment!==null&&renderAnalysisGraph(sentiment,'Sentiment Analysis'),subjectivity!==null&&renderAnalysisGraph(subjectivity,'Subjectivity Analysis'),emotions.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"emotions\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Detected Emotions:\"}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:emotions.join(', ')})})]}),feedback&&/*#__PURE__*/_jsxs(\"div\",{className:\"feedback\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Feedback:\"}),/*#__PURE__*/_jsx(ReactMarkdown,{children:feedback})]})]})});}export default App;","map":{"version":3,"names":["React","useState","ReactMarkdown","jsxs","_jsxs","jsx","_jsx","App","diaryEntry","setDiaryEntry","feedback","setFeedback","isLoading","setIsLoading","sentiment","setSentiment","subjectivity","setSubjectivity","emotions","setEmotions","handleSubmit","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","today","Date","toLocaleDateString","year","month","day","renderAnalysisGraph","value","title","className","children","style","width","toFixed","onChange","e","target","placeholder","rows","cols","onClick","disabled","length","join"],"sources":["/Users/huntae/Documents/2024/2024 4학년 2학기/mental-health-diary-analyzer/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './App.css';\n\nfunction App() {\n  const [diaryEntry, setDiaryEntry] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [sentiment, setSentiment] = useState(null);\n  const [subjectivity, setSubjectivity] = useState(null);\n  const [emotions, setEmotions] = useState([]);\n\n  const handleSubmit = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch('/api/submit_diary', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ diaryEntry }),\n      });\n      const data = await response.json();\n      setFeedback(data.feedback);\n      setSentiment(data.sentiment);\n      setSubjectivity(data.subjectivity);\n      setEmotions(data.emotions);\n    } catch (error) {\n      console.error('Error fetching feedback:', error);\n      setFeedback('Failed to get feedback. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const today = new Date().toLocaleDateString('en-US', { \n    year: 'numeric', \n    month: 'long', \n    day: 'numeric' \n  });\n\n  const renderAnalysisGraph = (value, title) => (\n    <div className=\"analysis-graph\">\n      <h3>{title}:</h3>\n      <div className=\"graph-container\">\n        <div className=\"graph-bar\" style={{width: `${((value + 5) / 10) * 100}%`}}></div>\n      </div>\n      <div className=\"graph-labels\">\n        <span>{title === 'Sentiment Analysis' ? 'Negative' : 'Objective'}</span>\n        <span>Neutral</span>\n        <span>{title === 'Sentiment Analysis' ? 'Positive' : 'Subjective'}</span>\n      </div>\n      <p>Score: <strong>{value.toFixed(2)}</strong></p>\n    </div>\n  );\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Good day user, how was your day?</h1>\n        <p className=\"date\">{today}</p>\n        <textarea\n          value={diaryEntry}\n          onChange={(e) => setDiaryEntry(e.target.value)}\n          placeholder=\"Write your diary entry here...\"\n          rows=\"10\"\n          cols=\"50\"\n        />\n        <button onClick={handleSubmit} disabled={isLoading}>\n          {isLoading ? (\n            <div className=\"spinner\"></div>\n          ) : (\n            'Submit Entry'\n          )}\n        </button>\n        {sentiment !== null && renderAnalysisGraph(sentiment, 'Sentiment Analysis')}\n        {subjectivity !== null && renderAnalysisGraph(subjectivity, 'Subjectivity Analysis')}\n        {emotions.length > 0 && (\n          <div className=\"emotions\">\n            <h3>Detected Emotions:</h3>\n            <p><strong>{emotions.join(', ')}</strong></p>\n          </div>\n        )}\n        {feedback && (\n          <div className=\"feedback\">\n            <h3>Feedback:</h3>\n            <ReactMarkdown>{feedback}</ReactMarkdown>\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,aAAa,KAAM,gBAAgB,CAC1C,MAAO,WAAW,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAEnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGR,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACS,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,SAAS,CAAEC,YAAY,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACa,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAACe,YAAY,CAAEC,eAAe,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAACiB,QAAQ,CAAEC,WAAW,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAE5C,KAAM,CAAAmB,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/BP,YAAY,CAAC,IAAI,CAAC,CAClB,GAAI,CACF,KAAM,CAAAQ,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,mBAAmB,CAAE,CAChDC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEnB,UAAW,CAAC,CACrC,CAAC,CAAC,CACF,KAAM,CAAAoB,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClClB,WAAW,CAACiB,IAAI,CAAClB,QAAQ,CAAC,CAC1BK,YAAY,CAACa,IAAI,CAACd,SAAS,CAAC,CAC5BG,eAAe,CAACW,IAAI,CAACZ,YAAY,CAAC,CAClCG,WAAW,CAACS,IAAI,CAACV,QAAQ,CAAC,CAC5B,CAAE,MAAOY,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChDnB,WAAW,CAAC,2CAA2C,CAAC,CAC1D,CAAC,OAAS,CACRE,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAED,KAAM,CAAAmB,KAAK,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,OAAO,CAAE,CACnDC,IAAI,CAAE,SAAS,CACfC,KAAK,CAAE,MAAM,CACbC,GAAG,CAAE,SACP,CAAC,CAAC,CAEF,KAAM,CAAAC,mBAAmB,CAAGA,CAACC,KAAK,CAAEC,KAAK,gBACvCpC,KAAA,QAAKqC,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BtC,KAAA,OAAAsC,QAAA,EAAKF,KAAK,CAAC,GAAC,EAAI,CAAC,cACjBlC,IAAA,QAAKmC,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9BpC,IAAA,QAAKmC,SAAS,CAAC,WAAW,CAACE,KAAK,CAAE,CAACC,KAAK,CAAE,GAAI,CAACL,KAAK,CAAG,CAAC,EAAI,EAAE,CAAI,GAAG,GAAG,CAAE,CAAM,CAAC,CAC9E,CAAC,cACNnC,KAAA,QAAKqC,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BpC,IAAA,SAAAoC,QAAA,CAAOF,KAAK,GAAK,oBAAoB,CAAG,UAAU,CAAG,WAAW,CAAO,CAAC,cACxElC,IAAA,SAAAoC,QAAA,CAAM,SAAO,CAAM,CAAC,cACpBpC,IAAA,SAAAoC,QAAA,CAAOF,KAAK,GAAK,oBAAoB,CAAG,UAAU,CAAG,YAAY,CAAO,CAAC,EACtE,CAAC,cACNpC,KAAA,MAAAsC,QAAA,EAAG,SAAO,cAAApC,IAAA,WAAAoC,QAAA,CAASH,KAAK,CAACM,OAAO,CAAC,CAAC,CAAC,CAAS,CAAC,EAAG,CAAC,EAC9C,CACN,CAED,mBACEvC,IAAA,QAAKmC,SAAS,CAAC,KAAK,CAAAC,QAAA,cAClBtC,KAAA,WAAQqC,SAAS,CAAC,YAAY,CAAAC,QAAA,eAC5BpC,IAAA,OAAAoC,QAAA,CAAI,kCAAgC,CAAI,CAAC,cACzCpC,IAAA,MAAGmC,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAEV,KAAK,CAAI,CAAC,cAC/B1B,IAAA,aACEiC,KAAK,CAAE/B,UAAW,CAClBsC,QAAQ,CAAGC,CAAC,EAAKtC,aAAa,CAACsC,CAAC,CAACC,MAAM,CAACT,KAAK,CAAE,CAC/CU,WAAW,CAAC,gCAAgC,CAC5CC,IAAI,CAAC,IAAI,CACTC,IAAI,CAAC,IAAI,CACV,CAAC,cACF7C,IAAA,WAAQ8C,OAAO,CAAEhC,YAAa,CAACiC,QAAQ,CAAEzC,SAAU,CAAA8B,QAAA,CAChD9B,SAAS,cACRN,IAAA,QAAKmC,SAAS,CAAC,SAAS,CAAM,CAAC,CAE/B,cACD,CACK,CAAC,CACR3B,SAAS,GAAK,IAAI,EAAIwB,mBAAmB,CAACxB,SAAS,CAAE,oBAAoB,CAAC,CAC1EE,YAAY,GAAK,IAAI,EAAIsB,mBAAmB,CAACtB,YAAY,CAAE,uBAAuB,CAAC,CACnFE,QAAQ,CAACoC,MAAM,CAAG,CAAC,eAClBlD,KAAA,QAAKqC,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBpC,IAAA,OAAAoC,QAAA,CAAI,oBAAkB,CAAI,CAAC,cAC3BpC,IAAA,MAAAoC,QAAA,cAAGpC,IAAA,WAAAoC,QAAA,CAASxB,QAAQ,CAACqC,IAAI,CAAC,IAAI,CAAC,CAAS,CAAC,CAAG,CAAC,EAC1C,CACN,CACA7C,QAAQ,eACPN,KAAA,QAAKqC,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBpC,IAAA,OAAAoC,QAAA,CAAI,WAAS,CAAI,CAAC,cAClBpC,IAAA,CAACJ,aAAa,EAAAwC,QAAA,CAAEhC,QAAQ,CAAgB,CAAC,EACtC,CACN,EACK,CAAC,CACN,CAAC,CAEV,CAEA,cAAe,CAAAH,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}